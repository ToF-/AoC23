
module SeedFertilizerSpec
    where

import SeedFertilizer
import Test.Hspec


sample :: [String]
sample = ["seeds: 79 14 55 13"
         ,""
         ,"seed-to-soil map:"
         ,"50 98 2"
         ,"52 50 48"
         ,""
         ,"soil-to-fertilizer map:"
         ,"0 15 37"
         ,"37 52 2"
         ,"39 0 15"
         ,""
         ,"fertilizer-to-water map:"
         ,"49 53 8"
         ,"0 11 42"
         ,"42 0 7"
         ,"57 7 4"
         ,""
         ,"water-to-light map:"
         ,"88 18 7"
         ,"18 25 70"
         ,""
         ,"light-to-temperature map:"
         ,"45 77 23"
         ,"81 45 19"
         ,"68 64 13"
         ,""
         ,"temperature-to-humidity map:"
         ,"0 69 1"
         ,"1 0 69"
         ,""
         ,"humidity-to-location map:"
         ,"60 56 37"
         ,"56 93 4"]

spec :: SpecWith ()
spec = do
    let sf = readAlmanach sample 
    describe "seed fertilizer" $ do
        it "can read an almanach" $ do
            seeds sf `shouldBe` [79,14,55,13]
            seedRanges sf `shouldBe` [R 79 14,R 55 13]
            (maps sf) !! 0 `shouldBe` M [C {dest = 50, range = R 98 2 }
                                          ,C {dest = 52, range = R 50 48 }]
            (maps sf) !! 6 `shouldBe` M [C {dest = 60, range = R 56 37}
                                          ,C {dest = 56, range = R 93 4}]

    describe "converter" $ do
        it "converts an int within a range to a dest" $ do
            let c = C { dest = 50, range = R 98 2 }
            convert 98 c `shouldBe` Just 50
            convert 99 c `shouldBe` Just 51
            convert 100 c `shouldBe` Nothing
            convert 97 c `shouldBe` Nothing

        it "converts a range of ints within a range to dest ranges" $ do
            let c = C { dest = 50, range = R 98 2 }
            convertR (R 98 2) c `shouldBe` [R 50 2]
            convertR (R 98 4) c `shouldBe` [R 50 2,R 100 2]
            convertR (R 96 4) c `shouldBe` [R 96 2,R 50 2]
            convertR (R 96 6) c `shouldBe` [R 96 2,R 50 2,R 100 2]
            convertR (R 1 109) c `shouldBe` [R 1 97,R 50 2,R 100 10]
            convertR (R 1 10) c `shouldBe` [R 1 10]
            convertR (R 1 99) c `shouldBe` [R 1 97,R 50 2]
            convertR (R 1 97) (C 52 (R 50 48)) `shouldBe` [R 1 49,R 52 48]
            convertR (R 50 2) (C 52 (R 50 48)) `shouldBe` [R 52 2]
            convertR (R 79 14) (C 52 (R 50 48)) `shouldBe` [R 81 14]
            convertR (R 74 14) (C 45 (R 77 23)) `shouldBe` [R 74 3,R 45 11]
            convertR (R 45 11) (C 81 (R 45 19)) `shouldBe` [R 81 11]
            convertR (R 45 11) (C 1 (R 0 69))`shouldBe` [R 46 11]
--
-- convertR R 1 10 (C 50 (98, 2)) =
--         R 1 10 = (1, 1 + 10 - 1)
--         R 98 99 = (98, 98 + 2 - 1)
--         R 98 10 = (max 1 98, min 10 99)
--         R 1 0 = if isValidRange R 98 10 then (1,98-1) else invalid
--         R 1 0 = if isValidRange R 98 10 then (99+1,10) else invalid
--     in case catMaybes $ map validRange [R 1 0, offset (-48) R 98 10, R 1 0] of
--          [] -> [R 1 10]
--          rs -> rs

    describe "mapping" $ do 
        it "converts an int according to converters or itself if not in range" $ do
            let m = (maps sf)!!0
            mapping 49 m `shouldBe` 49
            mapping 98 m `shouldBe` 50
            mapping 50 m `shouldBe` 52
            mapping 97 m `shouldBe` 99
            mapping 100 m `shouldBe` 100

        it "converts ranges of ints within ranges of converters" $ do
            let m = (maps sf) !! 0
         -- 50 ← 98 2 / R 1 99 → R 1 97,R 50 2
         -- 52 ← 50 48 / R 1 97,R 50 2 →  [R 1 49,R 52 48,R 52 2]
            mappingR [R 1 10] m `shouldBe` [R 1 10]
            mappingR [R 1 10,R 200 8] m `shouldBe` [R 1 10,R 200 8]
            mappingR [R 1 99,R 100 199] m `shouldBe` [R 1 49,R 52 46,R 50 2,R 50 2,R 100 199]
            mappingR [R 74 14] (M [C 45 (R 77 23)])`shouldBe` [R 74 3,R 45 11]
            mappingR [R 74 3,(R 45 11)] (M [C 81 (R 45 19)])`shouldBe` [R 74 3,R 81 11]

    describe "all MappingRs" $ do
        it "converts ranges according to a group of mappings" $ do
            allMappingsR [(seedRanges sf)!!0] (maps sf) `shouldBe`
                 [[R 81 14]
                 ,[R 81 14]
                 ,[R 81 14]
                 ,[R 74 14]
                 ,[R 46 3,R 45 11]
                 ,[R 47 3,R 46 11]
                 ,[R 47 3,R 46 10,R 60 1]
                 ,[R 47 3,R 46 10,R 60 1]]

            al <- (readAlmanach . lines) <$> readFile "data/puzzle.txt"
            allMappingsR (seedRanges al) (maps al) `shouldBe` 
                [[R 643108605 11620791,R 1808580943 592198,R 2916488878 19520356,R 3932833115 88315480,R 3625461917 307371198,R 3525561241 21848064,R 2936009234 52680608,R 3546123220 1286085,R 2936009234 52680608,R 3406224584 119336657,R 2988689842 100515351,R 3547409305 78052612,R 3690342396 192909656,R 1418175436 8776260,R 1224405006 368941186,R 1804384653 4196290,R 1460961090 80389047,R 1812907024 20023040,R 2180589141 20269154,R 1506664281 34685856,R 1812907024 1371476,R 3422399727 103161514,R 2988689842 56128208,R 1152623119 11566906,R 1832930064 82536899,R 1622262003 12126407,R 2249621993 72997499,R 1320799812 86133633,R 621215889 4213184]
                ,[R 511979122 5717732,R 1070625412 5903059,R 553899803 592198,R 2763179843 19520356,R 3165745804 69244317,R 3982911524 19071163,R 2404333231 116054275,R 2778598825 11267883,R 3568413720 21940675,R 3961802244 90737174,R 3761987050 12737700,R 3961802244 21109280,R 3435289775 32204957,R 3164426550 1319254,R 3680625861 21848064,R 2782700199 33499770,R 3508400735 19180838,R 3701187840 1286085,R 2782700199 33499770,R 3508400735 19180838,R 2782742192 7124516,R 3568413720 112212141,R 3527581573 40832147,R 2722903919 55694906,R 2597980549 3988298,R 3702473925 27015791,R 2353296410 51036821,R 2469213710 51173796,R 2778598825 11267883,R 3568413720 21940675,R 3961802244 90737174,R 3761987050 12737700,R 3961802244 5052428,R 680441479 8776260,R 1015620994 55004418,R 147221566 704464,R 1594695454 7526844,R 549906775 165152312,R 1967229094 10978530,R 1942888942 24340152,R 2002547776 6344506,R 1755567186 54083108,R 54083108 44806852,R 1602019036 203262,R 549906775 3993028,R 1975397140 2810484,R 1942888942 24340152,R 2002547776 6344506,R 1755567186 46893905,R 558225884 2514854,R 1809650294 17508186,R 4020962858 9569851,R 3188476187 6238746,R 2590855103 4460557,R 1767775235 34685856,R 558225884 1371476,R 3577464347 103161514,R 3527581573 40832147,R 2722903919 15296061,R 1777821700 11566906,R 1827158480 48918188,R 560740738 33618711,R 2038641401 9481451,R 1114796271 2644956,R 2644079358 72997499,R 583065855 86133633,R 1736212634 4213184]
                  ,[R 4119914098 5717732,R 3331468618 5903059,R 4161834779 592198,R 3930762763 19520356,R 725393748 69244317,R 3124930372 19071163,R 2453802319 4662868,R 2885730462 19213842,R 52449107 59958173,R 1766330212 32219392,R 3946181745 11267883,R 3388904870 11859750,R 1139921414 2088731,R 2936242701 5422479,R 2700471674 2569715,R 3103821092 90737174,R 3407565053 12737700,R 3103821092 21109280,R 994937719 32204957,R 724074494 1319254,R 3326203864 21848064,R 3950283119 33499770,R 3328891885 19180838,R 3346765843 1286085,R 3950283119 33499770,R 3328891885 19180838,R 3950325112 7124516,R 3388904870 11859750,R 1139921414 2088731,R 2936242701 5422479,R 2700471674 27250128,R 2879827793 5902669,R 3266515480 59688384,R 3348072723 40832147,R 3890486839 55694906,R 2223123344 3988298,R 3348051928 27015791,R 2402765498 51036821,R 93452876 18954404,R 1766330212 32219392,R 3946181745 11267883,R 3388904870 11859750,R 1139921414 2088731,R 2936242701 5422479,R 2700471674 2569715,R 3103821092 90737174,R 3407565053 12737700,R 3103821092 5052428,R 4039909230 7501483,R 1891284662 1274777,R 1879981248 11303414,R 1813941856 9753130,R 809944053 16219371,R 3313740115 17728503,R 3998858352 30075,R 3755186617 674389,R 2937138141 4527039,R 2700471674 2999805,R 4157841751 89513901,R 3998888427 48522286,R 1891284662 27116125,R 1414977003 10978530,R 1390636851 24340152,R 1275839172 6344506,R 1586518170 10333675,R 4109248100 43749433,R 3905719894 44806852,R 2703268217 203262,R 4157841751 3993028,R 1423145049 2810484,R 1390636851 24340152,R 1275839172 6344506,R 1586518170 10333675,R 4109248100 36560230,R 4166160860 2514854,R 4152997533 17508186,R 3162981706 9569851,R 748124131 6238746,R 2215997898 4460557,R 4111122474 34685856,R 4166160860 1371476,R 3397955497 2809123,R 1139921414 2088731,R 2936242701 5422479,R 2700471674 27250128,R 2879827793 5902669,R 3266515480 59688384,R 3348072723 40832147,R 3890486839 15296061,R 4121168939 11566906,R 4170505719 48918188,R 4168675714 33618711,R 1311932797 9481451,R 3375639477 2644956,R 2885272864 56392316,R 3868054594 16605183,R 4191000831 56354821,R 3998888427 29778812,R 3247375437 2920672,R 1570084290 1292512],[R 4119914098 5717732,R 2747912561 5903059,R 4214569821 592198,R 1416220401 18617778,R 2064226029 902578,R 2077580264 323240,R 2077903504 68921077,R 2299877132 17618205,R 3291725030 1452958,R 1538830603 4662868,R 180122526 19213842,R 372046917 14132957,R 0 45825216,R 2450281170 32219392,R 1431639383 3198796,R 2064226029 8069087,R 4737049 11859750,R 1752316323 2088731,R 3085419154 5422479,R 3082042824 2569715,R 2278767852 38727485,R 3291725030 27983985,R 2196302869 24025704,R 23397232 12737700,R 2278767852 21109280,R 1358307361 32204957,R 2076261010 1319254,R 2742647807 19678158,R 347894075 2169906,R 2065128607 12774897,R 2077903504 20724873,R 2745335828 16990137,R 347894075 2190701,R 348777896 1286085,R 2065128607 12774897,R 2077903504 20724873,R 2745335828 16990137,R 347894075 2190701,R 2065170600 7124516,R 4737049 11859750,R 1752316323 2088731,R 3085419154 5422479,R 3082042824 27250128,R 174219857 5902669,R 2292285787 25209550,R 210920193 12245358,R 2720414331 22233476,R 350084776 36095098,R 0 4737049,R 1375944477 55694906,R 2789146440 3988298,R 350063981 27015791,R 940176081 127250,R 2117308882 37082353,R 1525003385 13827218,R 26870812 18954404,R 2450281170 32219392,R 1431639383 3198796,R 2064226029 8069087,R 4737049 11859750,R 1752316323 2088731,R 3085419154 5422479,R 3082042824 2569715,R 2278767852 38727485,R 3291725030 27983985,R 2196302869 24025704,R 23397232 12737700,R 2278767852 5052428,R 1525366868 7501483,R 3995206920 1274777,R 3983903506 11303414,R 2497892814 9753130,R 1532742719 16219371,R 2730184058 17728503,R 2113703840 30075,R 316277835 674389,R 3086314594 4527039,R 3082042824 2999805,R 4210576793 66228083,R 4221395681 6588594,R 4283393470 11573826,R 4186823059 5123398,R 2113733915 40657320,R 1525003385 7864966,R 3995206920 7256474,R 2654431647 7456836,R 1978385607 12402815,R 278288922 10978530,R 253948770 24340152,R 1878473492 6344506,R 246126905 10333675,R 4109248100 24839917,R 4186823059 18909516,R 1391177532 43660647,R 2064226029 1146205,R 3084839367 203262,R 4210576793 3993028,R 286456968 2810484,R 253948770 24340152,R 1878473492 6344506,R 246126905 10333675,R 4109248100 24839917,R 4186823059 11720313,R 4218895902 2514854,R 4205732575 17508186,R 3312158159 7550856,R 2196302869 2018995,R 2100310647 6238746,R 2782020994 4460557,R 4111122474 22965543,R 4186823059 11720313,R 4218895902 1371476,R 13787676 2809123,R 1752316323 2088731,R 3085419154 5422479,R 3082042824 27250128,R 174219857 5902669,R 2292285787 25209550,R 210920193 12245358,R 2720414331 22233476,R 350084776 36095098,R 0 4737049,R 1375944477 15296061,R 4121168939 11566906,R 4223240761 48918188,R 4221410756 33618711,R 1986954752 4883642,R 1766669762 4597809,R 377651530 2644956,R 179664928 31255265,R 3065704582 25137051,R 1353512232 16605183,R 4243735873 33069003,R 4221395681 6588594,R 4283393470 11573826,R 4186823059 5123398,R 2113733915 29778812,R 2273145744 2920672,R 229693025 1292512],[R 2556743532 5717732,R 2484749382 5903059,R 2388236076 592198,R 1456550668 18617778,R 1244271065 902578,R 1257625300 323240,R 1257948540 68921077,R 2440297071 17618205,R 1550392086 1452958,R 989027337 4662868,R 1396592816 19213842,R 200697914 14132957,R 0 45825216,R 2853864288 32219392,R 1471969650 3198796,R 1244271065 8069087,R 4737049 11859750,R 1202513057 2088731,R 1723423303 5422479,R 1720046973 2569715,R 1275698932 108089,R 2419295880 38619396,R 1550392086 27983985,R 1376347905 24025704,R 23397232 12737700,R 1275698932 108089,R 2419295880 21001191,R 4275513590 19453706,R 2290178867 12751251,R 1256306046 1319254,R 2479484628 19678158,R 176545072 2169906,R 1245173643 12774897,R 1257948540 20724873,R 2482172649 16990137,R 176545072 2190701,R 177428893 1286085,R 1245173643 12774897,R 1257948540 20724873,R 2482172649 16990137,R 176545072 2190701,R 1245215636 7124516,R 4737049 11859750,R 1202513057 2088731,R 1723423303 5422479,R 1720046973 27250128,R 1390690147 5902669,R 2432705726 25209550,R 250804160 12245358,R 2457251152 22233476,R 178735773 36095098,R 0 4737049,R 4293150706 1816590,R 2290178867 13065777,R 1431157111 40812539,R 2525983261 3988298,R 178714978 27015791,R 3240919670 127250,R 1297353918 37082353,R 362955988 7003932,R 982204051 6823286,R 26870812 18954404,R 2853864288 32219392,R 1471969650 3198796,R 1244271065 8069087,R 4737049 11859750,R 1202513057 2088731,R 1723423303 5422479,R 1720046973 2569715,R 1275698932 108089,R 2419295880 38619396,R 1550392086 27983985,R 1376347905 24025704,R 23397232 12737700,R 1275698932 108089,R 2419295880 4944339,R 363319471 6640449,R 982204051 861034,R 3688459172 1274777,R 3677155758 11303414,R 2901475932 9753130,R 982939453 16219371,R 2467020879 17728503,R 1293748876 30075,R 144928832 674389,R 1724318743 4527039,R 1720046973 2999805,R 2384243048 35052832,R 2987009208 3755142,R 1421997947 9159164,R 1248043155 18260945,R 2395061936 6588594,R 1272892694 2914327,R 2278875941 8659499,R 2360489314 5123398,R 1293778951 40657320,R 362955988 7003932,R 982204051 861034,R 3688459172 7256474,R 2391268468 7456836,R 1158430643 12402815,R 106939919 10978530,R 82599767 24340152,R 1058518528 6344506,R 74777902 10333675,R 2546077534 24839917,R 2360489314 18909516,R 1431507799 43660647,R 1244271065 1146205,R 1722843516 203262,R 2384243048 3993028,R 115107965 2810484,R 82599767 24340152,R 1058518528 6344506,R 74777902 10333675,R 2546077534 24839917,R 2360489314 11720313,R 2392562157 2514854,R 2379398830 17508186,R 1570825215 7550856,R 1376347905 2018995,R 1280355683 6238746,R 2518857815 4460557,R 2547951908 22965543,R 2360489314 11720313,R 2392562157 1371476,R 13787676 2809123,R 1202513057 2088731,R 1723423303 5422479,R 1720046973 27250128,R 1390690147 5902669,R 2432705726 25209550,R 250804160 12245358,R 2457251152 22233476,R 178735773 36095098,R 0 4737049,R 4293150706 1816590,R 2290178867 13065777,R 1431157111 413694,R 2557998373 11566906,R 2396907016 22388864,R 2987009208 3755142,R 1421997947 9159164,R 1248043155 13615018,R 2395077011 24218869,R 2987009208 3755142,R 1421997947 5644700,R 1166999788 4883642,R 1216866496 4597809,R 206302527 2644956,R 1396135218 25862729,R 245411624 5392536,R 1703708731 25137051,R 4270718461 16605183,R 2417402128 1893752,R 2987009208 3755142,R 1421997947 9159164,R 1248043155 18260945,R 2395061936 6588594,R 1272892694 2914327,R 2278875941 8659499,R 2360489314 5123398,R 1293778951 29778812,R 1270076824 2920672,R 269576992 992709,R 59336731 299803],[R 3019511262 5717732,R 291901219 5903059,R 3822929016 592198,R 3810623153 18617778,R 1090804613 902578,R 1104158848 323240,R 1104482088 11156690,R 2622373978 57764387,R 247448908 17618205,R 1392357790 1452958,R 835560885 4662868,R 130684937 19213842,R 3828239017 14132957,R 22761393 45825216,R 2831964094 32219392,R 3826042135 3198796,R 1090804613 8069087,R 27498442 11859750,R 1049046605 2088731,R 3751891446 5422479,R 3748515116 2569715,R 2628967680 108089,R 3853988820 18247944,R 244695661 20371452,R 1392357790 27983985,R 110440026 24025704,R 46158625 12737700,R 2628967680 108089,R 3853988820 18247944,R 244695661 2753247,R 4275513590 19453706,R 97330704 12751251,R 1102839594 1319254,R 286636465 19678158,R 3804086175 2169906,R 1091707191 12774897,R 1104482088 11156690,R 2622373978 9568183,R 289324486 16990137,R 3804086175 2190701,R 3804969996 1286085,R 1091707191 12774897,R 1104482088 11156690,R 2622373978 9568183,R 289324486 16990137,R 3804086175 2190701,R 1091749184 7124516,R 27498442 11859750,R 1049046605 2088731,R 3751891446 5422479,R 3748515116 27250128,R 124782268 5902669,R 3867398666 4838098,R 244695661 20371452,R 2721073234 12245358,R 264402989 22233476,R 3806276876 36095098,R 22761393 4737049,R 4293150706 1816590,R 97330704 13065777,R 19762976 2998417,R 160686910 6748500,R 3794976513 31065622,R 2988750991 3988298,R 3806256081 27015791,R 1006162074 127250,R 2650622666 37082353,R 3766613245 7003932,R 828737599 6823286,R 49632205 18954404,R 2831964094 32219392,R 3826042135 3198796,R 1090804613 8069087,R 27498442 11859750,R 1049046605 2088731,R 3751891446 5422479,R 3748515116 2569715,R 2628967680 108089,R 3853988820 18247944,R 244695661 20371452,R 1392357790 27983985,R 110440026 24025704,R 46158625 12737700,R 2628967680 108089,R 3853988820 4944339,R 3766976728 6640449,R 828737599 861034,R 1973315233 1274777,R 1962011819 11303414,R 2879575738 9753130,R 829473001 16219371,R 274172716 17728503,R 2647017624 30075,R 3241907055 674389,R 3752786886 4527039,R 3748515116 2999805,R 3818935988 35052832,R 3785711651 3755142,R 156090068 4596842,R 15200654 4562322,R 1094576703 18260945,R 3829754876 6588594,R 2626161442 2914327,R 2705204405 8659499,R 3795182254 5123398,R 2647047699 40657320,R 3766613245 7003932,R 828737599 861034,R 1973315233 7256474,R 3825961408 7456836,R 1004964191 12402815,R 3311548105 2419736,R 3206337878 8558794,R 3477373380 3897497,R 1909096745 4209780,R 3295315230 16232875,R 905052076 6344506,R 3469551515 10333675,R 3008845264 24839917,R 3795182254 18909516,R 20113664 2647729,R 160686910 6748500,R 3794976513 34264418,R 1090804613 1146205,R 3751311659 203262,R 3818935988 3993028,R 3212086188 2810484,R 3477373380 3897497,R 1909096745 4209780,R 3295315230 16232875,R 905052076 6344506,R 3469551515 10333675,R 3008845264 24839917,R 3795182254 11720313,R 3827255097 2514854,R 3814091770 17508186,R 1412790919 7550856,R 110440026 2018995,R 2633624431 6238746,R 2981625545 4460557,R 3010719638 22965543,R 3795182254 11720313,R 3827255097 1371476,R 36549069 2809123,R 1049046605 2088731,R 3751891446 5422479,R 3748515116 27250128,R 124782268 5902669,R 3867398666 4838098,R 244695661 20371452,R 2721073234 12245358,R 264402989 22233476,R 3806276876 36095098,R 22761393 4737049,R 4293150706 1816590,R 97330704 13065777,R 19762976 413694,R 3020766103 11566906,R 3831599956 22388864,R 3785711651 3755142,R 156090068 4596842,R 15200654 4562322,R 1094576703 13615018,R 3829769951 24218869,R 3785711651 3755142,R 156090068 4596842,R 15200654 1047858,R 1013533336 4883642,R 1063400044 4597809,R 3833843630 2644956,R 130227339 25862729,R 2715680698 5392536,R 3732176874 25137051,R 4270718461 16605183,R 3852095068 1893752,R 3785711651 3755142,R 156090068 4596842,R 15200654 4562322,R 1094576703 18260945,R 3829754876 6588594,R 2626161442 2914327,R 2705204405 8659499,R 3795182254 5123398,R 2647047699 29778812,R 2623345572 2920672,R 2739846066 992709,R 82098124 299803],[R 1333349041 5717732,R 308958684 5903059,R 2921230818 592198,R 2908924955 18617778,R 2495260486 902578,R 2508614721 323240,R 2508937961 1504841,R 4222155468 9651849,R 1674813006 57764387,R 264506373 17618205,R 2456751115 1452958,R 1755309004 4662868,R 147742402 19213842,R 2926540819 14132957,R 337618111 10307031,R 11018487 15174681,R 64524116 17597238,R 402746998 2746266,R 3507265850 32190870,R 4282654574 28522,R 2924343937 3198796,R 2495260486 8069087,R 342355160 5569982,R 11018487 6289768,R 2453502478 2088731,R 649392434 5422479,R 646016104 2569715,R 1681406708 108089,R 1196336536 18247944,R 261753126 20371452,R 2456751115 27983985,R 127497491 24025704,R 24108688 2084480,R 64524116 10653220,R 1681406708 108089,R 1196336536 18247944,R 261753126 2753247,R 1724368088 19453706,R 434237359 6840587,R 121228756 5910664,R 2507295467 1319254,R 303693930 16155260,R 82121354 3522898,R 2902387977 2169906,R 2496163064 12774897,R 2508937961 1504841,R 4222155468 9651849,R 1674813006 9568183,R 306381951 13467239,R 82121354 3522898,R 2902387977 2190701,R 2903271798 1286085,R 2496163064 12774897,R 2508937961 1504841,R 4222155468 9651849,R 1674813006 9568183,R 306381951 13467239,R 82121354 3522898,R 2902387977 2190701,R 2496205057 7124516,R 342355160 5569982,R 11018487 6289768,R 2453502478 2088731,R 649392434 5422479,R 646016104 10985772,R 3533104446 6352274,R 4282654574 9912082,R 141839733 5902669,R 1209746382 4838098,R 261753126 20371452,R 1773512262 12245358,R 281460454 22233476,R 2904578678 36095098,R 337618111 4737049,R 1742005204 1816590,R 434237359 6840587,R 121228756 6225190,R 118941795 2286961,R 336906655 711456,R 177744375 6748500,R 2893278315 31065622,R 1302588770 3988298,R 2904557883 27015791,R 783148602 127250,R 1703061694 37082353,R 4283414657 7003932,R 1748485718 6823286,R 65913216 16208138,R 402746998 2746266,R 3507265850 32190870,R 4282654574 28522,R 2924343937 3198796,R 2495260486 8069087,R 342355160 5569982,R 11018487 6289768,R 2453502478 2088731,R 649392434 5422479,R 646016104 2569715,R 1681406708 108089,R 1196336536 18247944,R 261753126 20371452,R 2456751115 27983985,R 127497491 24025704,R 24108688 2084480,R 64524116 10653220,R 1681406708 108089,R 1196336536 4944339,R 4283778140 6640449,R 1748485718 861034,R 4099142619 1274777,R 4087839205 11303414,R 699591843 9753130,R 1749221120 16219371,R 291230181 17728503,R 1699456652 30075,R 2034632414 674389,R 650287874 4527039,R 646016104 2999805,R 2917237790 29021761,R 1190305465 6031071,R 2884013453 3755142,R 173147533 4596842,R 114379473 4562322,R 2499032576 11410226,R 4222155468 6850719,R 2928056678 6588594,R 1678600470 2914327,R 1757643433 8659499,R 2893484056 5123398,R 1699486727 40657320,R 4283414657 7003932,R 1748485718 861034,R 4099142619 7256474,R 2924263210 7456836,R 781950719 12402815,R 4196726618 2419736,R 1999063237 8558794,R 1827926076 3897497,R 4138229620 4209780,R 4180493743 16232875,R 1824800195 6344506,R 1820104211 10333675,R 1322683043 24839917,R 2893484056 18909516,R 119292483 1936273,R 336906655 711456,R 177744375 6748500,R 2893278315 34264418,R 2495260486 1146205,R 648812647 203262,R 2917237790 3993028,R 2004811547 2810484,R 1827926076 3897497,R 4138229620 4209780,R 4180493743 16232875,R 1824800195 6344506,R 1820104211 10333675,R 1322683043 24839917,R 2893484056 11720313,R 2925556899 2514854,R 2912393572 17508186,R 2477184244 7550856,R 127497491 2018995,R 1686063459 6238746,R 1225671459 4115921,R 1299579245 344636,R 1324557417 22965543,R 2893484056 11720313,R 2925556899 1371476,R 14499132 2809123,R 2453502478 2088731,R 649392434 5422479,R 646016104 10985772,R 3533104446 6352274,R 4282654574 9912082,R 141839733 5902669,R 1209746382 4838098,R 261753126 20371452,R 1773512262 12245358,R 281460454 22233476,R 2904578678 36095098,R 337618111 4737049,R 1742005204 1816590,R 434237359 6840587,R 121228756 6225190,R 118941795 413694,R 1334603882 11566906,R 2929901758 16357793,R 1190305465 6031071,R 2884013453 3755142,R 173147533 4596842,R 114379473 4562322,R 2499032576 11410226,R 4222155468 2204792,R 2928071753 18187798,R 1190305465 6031071,R 2884013453 3755142,R 173147533 4596842,R 114379473 1047858,R 790519864 4883642,R 2467855917 4597809,R 2932145432 2644956,R 147284804 25862729,R 1768119726 5392536,R 4279149990 3504584,R 2190201420 9951265,R 643133711 11681202,R 3404437583 4733759,R 1724306718 11871424,R 1194442784 1893752,R 2884013453 3755142,R 173147533 4596842,R 114379473 4562322,R 2499032576 11410226,R 4222155468 6850719,R 2928056678 6588594,R 1678600470 2914327,R 1757643433 8659499,R 2893484056 5123398,R 1699486727 29778812,R 1675784600 2920672,R 1792285094 992709,R 419004779 299803],[R 1333349041 5717732,R 308958684 5903059,R 2921230818 592198,R 2908924955 18617778,R 2495260486 902578,R 2508614721 323240,R 2508937961 1504841,R 4222155468 9651849,R 1674813006 57764387,R 264506373 17618205,R 2456751115 1452958,R 1755309004 4662868,R 147742402 19213842,R 2926540819 14132957,R 337618111 10307031,R 11018487 15174681,R 64524116 17597238,R 402746998 2746266,R 3507265850 32190870,R 4282654574 28522,R 2924343937 3198796,R 2495260486 8069087,R 342355160 5569982,R 11018487 6289768,R 2453502478 2088731,R 649392434 5422479,R 646016104 2569715,R 1681406708 108089,R 1196336536 18247944,R 261753126 20371452,R 2456751115 27983985,R 127497491 24025704,R 24108688 2084480,R 64524116 10653220,R 1681406708 108089,R 1196336536 18247944,R 261753126 2753247,R 1724368088 19453706,R 434237359 6840587,R 121228756 5910664,R 2507295467 1319254,R 303693930 16155260,R 82121354 3522898,R 2902387977 2169906,R 2496163064 12774897,R 2508937961 1504841,R 4222155468 9651849,R 1674813006 9568183,R 306381951 13467239,R 82121354 3522898,R 2902387977 2190701,R 2903271798 1286085,R 2496163064 12774897,R 2508937961 1504841,R 4222155468 9651849,R 1674813006 9568183,R 306381951 13467239,R 82121354 3522898,R 2902387977 2190701,R 2496205057 7124516,R 342355160 5569982,R 11018487 6289768,R 2453502478 2088731,R 649392434 5422479,R 646016104 10985772,R 3533104446 6352274,R 4282654574 9912082,R 141839733 5902669,R 1209746382 4838098,R 261753126 20371452,R 1773512262 12245358,R 281460454 22233476,R 2904578678 36095098,R 337618111 4737049,R 1742005204 1816590,R 434237359 6840587,R 121228756 6225190,R 118941795 2286961,R 336906655 711456,R 177744375 6748500,R 2893278315 31065622,R 1302588770 3988298,R 2904557883 27015791,R 783148602 127250,R 1703061694 37082353,R 4283414657 7003932,R 1748485718 6823286,R 65913216 16208138,R 402746998 2746266,R 3507265850 32190870,R 4282654574 28522,R 2924343937 3198796,R 2495260486 8069087,R 342355160 5569982,R 11018487 6289768,R 2453502478 2088731,R 649392434 5422479,R 646016104 2569715,R 1681406708 108089,R 1196336536 18247944,R 261753126 20371452,R 2456751115 27983985,R 127497491 24025704,R 24108688 2084480,R 64524116 10653220,R 1681406708 108089,R 1196336536 4944339,R 4283778140 6640449,R 1748485718 861034,R 4099142619 1274777,R 4087839205 11303414,R 699591843 9753130,R 1749221120 16219371,R 291230181 17728503,R 1699456652 30075,R 2034632414 674389,R 650287874 4527039,R 646016104 2999805,R 2917237790 29021761,R 1190305465 6031071,R 2884013453 3755142,R 173147533 4596842,R 114379473 4562322,R 2499032576 11410226,R 4222155468 6850719,R 2928056678 6588594,R 1678600470 2914327,R 1757643433 8659499,R 2893484056 5123398,R 1699486727 40657320,R 4283414657 7003932,R 1748485718 861034,R 4099142619 7256474,R 2924263210 7456836,R 781950719 12402815,R 4196726618 2419736,R 1999063237 8558794,R 1827926076 3897497,R 4138229620 4209780,R 4180493743 16232875,R 1824800195 6344506,R 1820104211 10333675,R 1322683043 24839917,R 2893484056 18909516,R 119292483 1936273,R 336906655 711456,R 177744375 6748500,R 2893278315 34264418,R 2495260486 1146205,R 648812647 203262,R 2917237790 3993028,R 2004811547 2810484,R 1827926076 3897497,R 4138229620 4209780,R 4180493743 16232875,R 1824800195 6344506,R 1820104211 10333675,R 1322683043 24839917,R 2893484056 11720313,R 2925556899 2514854,R 2912393572 17508186,R 2477184244 7550856,R 127497491 2018995,R 1686063459 6238746,R 1225671459 4115921,R 1299579245 344636,R 1324557417 22965543,R 2893484056 11720313,R 2925556899 1371476,R 14499132 2809123,R 2453502478 2088731,R 649392434 5422479,R 646016104 10985772,R 3533104446 6352274,R 4282654574 9912082,R 141839733 5902669,R 1209746382 4838098,R 261753126 20371452,R 1773512262 12245358,R 281460454 22233476,R 2904578678 36095098,R 337618111 4737049,R 1742005204 1816590,R 434237359 6840587,R 121228756 6225190,R 118941795 413694,R 1334603882 11566906,R 2929901758 16357793,R 1190305465 6031071,R 2884013453 3755142,R 173147533 4596842,R 114379473 4562322,R 2499032576 11410226,R 4222155468 2204792,R 2928071753 18187798,R 1190305465 6031071,R 2884013453 3755142,R 173147533 4596842,R 114379473 1047858,R 790519864 4883642,R 2467855917 4597809,R 2932145432 2644956,R 147284804 25862729,R 1768119726 5392536,R 4279149990 3504584,R 2190201420 9951265,R 643133711 11681202,R 3404437583 4733759,R 1724306718 11871424,R 1194442784 1893752,R 2884013453 3755142,R 173147533 4596842,R 114379473 4562322,R 2499032576 11410226,R 4222155468 6850719,R 2928056678 6588594,R 1678600470 2914327,R 1757643433 8659499,R 2893484056 5123398,R 1699486727 29778812,R 1675784600 2920672,R 1792285094 992709,R 419004779 299803]]
    describe "lowest location" $ do
        it "find the lowest location after all mappings" $ do
            lowestLocation sf `shouldBe` 35 

        it "solve the puzzle part one" $ do
            puzzle <- lines <$> readFile "data/puzzle.txt"
            let al = readAlmanach puzzle
            lowestLocation al `shouldBe` 178159714

    describe "lowest location range" $ do
        it "find the lowest location after all mappings on all ranges" $ do
            lowestLocationR sf `shouldBe` 46

        it "solve the puzzle part two" $ do
            puzzle <- lines <$> readFile "data/puzzle.txt"
            let al = readAlmanach puzzle
            lowestLocationR al `shouldBe` 0
    
